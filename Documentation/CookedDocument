Vision: 
To learn about source control, deployment, and microservices through the management of the project with GitHub, the deployment of the project using a service like AWS, and the decoupling of features into their own containers and microservices.

MVP:
Significant change made to the code, non-noticeable change for the user.

Definition of Done:
A task is â€œdone" when it:

1. Has gone through at least 2 code reviews that ensure it works and is free of any volatile bugs that could cause it to break itself or the program as a whole. At least one of these code reviews has to be made by a real person.
2. Has been tested to confirm the expected functionality and stability. These tests include manual testing for edge cases and expected behavior, unit testing when applicable, and integration tests. The outcome, successful or otherwise, should be documented for future reference.
3. Maps back to a requirement in the product backlog.

Research DOD:
Research is "done" when:
1. Key findings are documented in an accessible format and shared with the entire team.
2. The research directly addresses the objective or question outlined in the task. Any relevant insights, recommendations, or potential next steps are included.
3. The research has been reviewed and acknowledged by at least two team members.

Test DOD:
Testing is "done" when:
1. The test case is clearly defined and documented, including the expected input, the expected output, and what edge cases are considered.
2. The test has been executed and results are recorded, specifying whether the test passed or failed and/or any unexpected behavior. 
3. The test has been reviewed and approved by at least one team member.

Story Point Estimations:

Story Points  |  Estimated Time
    0.5       =    30 minutes
     1        =     1 hour
     2        =     2 hours
     3        =     3 hours
     4        =     4 hours


Calculated Target Velocity:
Each developer has 5  hours. Times that by 8 to get 40. Because no one is 100% productive, multiply that by 0.6 to get 24 hours. So the CTV is 24 hours.

Automation:
Discord notifications for whenever pull requests are made, within the Product Backlog Tool, and the docker file and AWS. Automated testing. AI Code Review on Github which will be researched on by Gavin. 

Product Backlog Tool/Sprint Board:
Jira

Prod, Test, Dev Environment:
VS Code or Visual Studio. At least have a Dev Environment and a Production Environment. 

Coding Standard:
Header Blocks at the top of every file stating information on the file such as sprint #, what was changed, date (when the pull request was made). Essentially a changelog. Short header above methods that explain what the method will do. 

Testing: 
Deployment testing, unit tests, there's so many testing methods guys just do it. Writing more individual test cases. 

